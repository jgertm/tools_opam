load("@rules_cc//cc:defs.bzl", "cc_library")

################################################################
## testing lexis, syntaxis

cc_binary(
    name  = "opam_lex",
    srcs  = [
        "opam_lex.c",
        "opam_lex.h",
    ],
    copts = select({
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-pedantic-errors",

        "-Ibootstrap",
        "-I$(GENDIR)/bootstrap",

        "-I", "$(GENDIR)/test",

        # "-I", "external/obazl/vendored/logc",
        # "-I", "external/tools_obazl/vendored/logc",

        "-Iexternal/opam/bootstrap",
        "-I$(GENDIR)/external/opam/bootstrap",
    ],
    defines = ["DEBUG", "DEBUG_TRACE"],
    deps = [
        "//bootstrap:opam_lexer"
    ],
    # linkopts = select({
    #     "//bzl/host:linux": [],
    #     "//bzl/host:macos": ["-framework", "CoreServices"],
    # }),
    linkstatic = 1
)

##########
cc_binary(
    name  = "parse_file",
    srcs  = [
        "parse_file.c",
        "parse_file.h",
        # "//src:sealark_debug.c",
    ],
    copts = select({
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-pedantic-errors",

        "-I$(GENDIR)/test",
        # "-I$(GENDIR)/external/sealark/test",

        "-I$(GENDIR)/src",

        # "-Ivendored/logc",
        # "-Iexternal/sealark/vendored/logc",

        # "-Ivendored/uthash",
        # "-Iexternal/sealark/vendored/uthash",
    ],
    defines = ["DEBUG", "DEBUG_TRACE"],
    deps = [
        "//src:sealark",
        "//vendored/logc",
        "//vendored/uthash",
    ],
    linkstatic = 1
)

################################################################
genrule(
    name = "mkhdrs",
    srcs = ["opam_lex.c"],
    outs = ["opam_lex.h"],
    cmd = "\n".join([
        "SRC1=$(location opam_lex.c)",
        "SRCDIR1=`dirname $$SRC1`",
        "$(location //bootstrap:makeheaders) \\",
        "    $(location opam_lex.c)",
        "cp $${SRCDIR1}/*.h $(@D)",
    ]),
    tools = ["//bootstrap:makeheaders"],
    visibility = ["//visibility:public"]
)
